void insert(int temp, stack<int>& s) {
    // base case
    if (s.size() == 0 || s.top() <= temp) {
        s.push(temp);
        return;
    }

    // hypothesis
    int val = s.top();
    s.pop();
    insert(temp, s);

    // induction
    s.push(val);

}
void sol(stack<int>& s) {
    // base case
    if (s.size() == 1) return;
    
    // hypothesis
    int temp = s.top();
    s.pop();
    sol(s);

    // induction
    insert(temp, s);
}
void print(stack<int>& s) {
    // base case
    if (s.size() == 1) {
        cout << 1 << " ";
        return;
    }

    // hypothesis
    int a = s.top();
    s.pop();
    print(s);

    // induction
    cout << a << " ";
}
void solve() {
    int n;
    cin >> n;
    stack<int> s;
    for (int i = 0; i < n; i++) {
        int x;
        cin >> x;
        s.push(x);
    }
    sol(s);
    print(s);
}
