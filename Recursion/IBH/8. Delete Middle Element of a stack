void del(stack<int>&v, int mid)
{
	// base case
	if (v.size() == mid) {
		v.pop();
		return;
	}

        // hypothesis
	int temp = v.top();
	v.pop();
	del(v, mid);

	// induction
	v.push(temp); 
}

void print(stack<int>v)
{
	// base case
	if (v.empty()) return;

	//hypothesis
	int x = v.top();
	v.pop();
	print(v);

	//induction
	cout << x << " ";
}

void solve() {
	int n;
	cin >> n;
	stack<int>v;

	for (int i = 0; i < n; i++)
	{
		int x;
		cin >> x;
		v.push(x);
	}
	int mid = n / 2 + 1;
	del(v, mid);
	print(v);
}
