void inserts(stack<int>&v, int temp)
{
	// base case
	if (v.size() == 0 || v.top() <= temp)
	{
		v.push(temp);
		return;
	}
	int val = v.top(); // induction
	v.pop(); // induction
	inserts(v, temp); // hypothesis
	v.push(val); // induction
}

void sort(stack<int>&v)
{
	if (v.size() == 1) return; // base case

	int temp = v.top(); // induction
	v.pop(); // induction
	sort(v); // hypothesis
	inserts(v, temp); // induction
}

void print(stack<int>v)
{
	if (v.empty()) return;
	int x = v.top();
	v.pop();
	print(v);
	cout << x << " ";
}

void solve() {
	int n;
	cin >> n;
	stack<int>v;
	int x;
	for (int i = 0; i < n; i++)
	{
		cin >> x;
		v.push(x);
	}
	sort(v);
	print(v);
}
