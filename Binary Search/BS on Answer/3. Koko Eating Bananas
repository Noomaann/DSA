class Solution {
    long long sol(long long mid, vector<int>v){
        long long total = 0;
        for(int i=0; i<v.size(); i++){
            total += ((v[i]+mid-1)/mid);
        }
        return total;
    }
public:
    int minEatingSpeed(vector<int>& v, int h) {
        long long low = 1;
        long long high = *max_element(v.begin(),v.end());
        long long ans = -1;
        while(low <= high){
            long long mid = low+(high-low)/2;
            long long total = sol(mid,v);
            if(total <= h){
                ans = mid;
                high = mid-1;
            }
            else low = mid+1;
        }
        return (int)ans;
    }
};
