class Solution {
    bool posi(vector<int> v, int mid, int m, int k){
        int cnt = 0;
        int ans = 0;
        for(int i=0; i<v.size(); i++){
            if(v[i] <= mid) cnt++;
            else{
                ans += cnt/k;
                cnt = 0;
            }
        }
        ans += cnt/k;
        return ans >= m;
    }
public:
    int minDays(vector<int>& v, int m, int k) {
        long long val = m*1LL*k*1LL;
        if(val > v.size()){
            return -1;
        }
        int low =  *min_element(v.begin(),v.end());
        int high =  *max_element(v.begin(),v.end());
        int ans = -1;
        while(low <= high){
            int mid = low+(high-low)/2;
            if(posi(v,mid,m,k)){
                ans = mid;
                high = mid-1;
            }
            else low = mid+1;
        }
        return ans;
    }
};
