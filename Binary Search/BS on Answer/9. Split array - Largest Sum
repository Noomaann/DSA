class Solution {
    int ok(int mid, vector<int>& v, int k) {
        int cnt = 1;
        int ans = 0;
        for(int i = 0; i < v.size(); i++) {
            if(ans + v[i] <= mid) {
                ans += v[i];
            }
            else {
                cnt++;
                ans = v[i];
            }
        }
        return cnt;
    }
public:
    int splitArray(vector<int>& v, int k) {
        int low = *max_element(v.begin(), v.end());
        int high = accumulate(v.begin(), v.end(), 0LL);
        int ans = 0;
        
        while(low <= high) {
            int mid = low + (high - low) / 2;
            int x = ok(mid, v, k);
            if(x <= k) {
                ans = mid;
                high = mid - 1;
            }
            else low = mid + 1;
        }
        return ans;
    }
};
